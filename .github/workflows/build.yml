name: Test and build application
on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libglu1-mesa libgtk-3-dev pkg-config

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true
    
    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          /opt/hostedtoolcache/flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze code
      run: flutter analyze

    - name: Run tests
      run: flutter test

    # Windows
    - name: Build Windows executable
      if: matrix.os == 'windows-latest'
      run: flutter build windows --release

    - name: Upload Windows executable
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: build/windows/x64/runner/Release/*.exe


    # Linux
    - name: Build Linux executable
      if: matrix.os == 'ubuntu-latest'
      run: flutter build linux --release

    - name: Upload Linux bundle
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-bundle
        path: build/linux/x64/release/bundle/**


    # Web
    - name: Enable web support
      if: matrix.os == 'ubuntu-latest'
      run: flutter config --enable-web

    - name: Build Flutter Web
      if: matrix.os == 'ubuntu-latest'
      run: flutter build web --release

    - name: Upload Web build
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/**


    # Android
    - name: Build Android APK
      if: matrix.os == 'ubuntu-latest'
      run: flutter build apk --release

    - name: Upload Android APK
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk


    # macOS
    - name: Build macOS app
      if: matrix.os == 'macos-latest'
      run: flutter build macos --release

    - name: Upload macOS app
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: build/macos/Build/Products/Release/*.app
